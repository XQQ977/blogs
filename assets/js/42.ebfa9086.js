(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{463:function(s,n,a){"use strict";a.r(n);var e=a(2),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"父子组件传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#父子组件传值"}},[s._v("#")]),s._v(" 父子组件传值")]),s._v(" "),n("h2",{attrs:{id:"一、事件总线-eventbus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、事件总线-eventbus"}},[s._v("#")]),s._v(" 一、事件总线（eventBus）")]),s._v(" "),n("img",{attrs:{src:s.$withBase("/images/2.jpg"),alt:"mixureSecure"}}),s._v(" "),n("p",[n("strong",[s._v("注意点：有组件发布事件后，剩余的所有组件都可以进行监听事件")])]),s._v(" "),n("h3",{attrs:{id:"_1-使用eventbus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用eventbus"}},[s._v("#")]),s._v(" 1. 使用EventBus")]),s._v(" "),n("h4",{attrs:{id:"_1-1-创建事件总线-main-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-创建事件总线-main-js"}},[s._v("#")]),s._v(" 1.1 创建事件总线 main.js")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import Vue from 'vue'\n// 创建事件总线 就相当于创建了一个新的vue实例\nconst bus = new Vue()\n// 把bus挂载到了vue的原型上，保证所有的组件都能通过this.$bus访问到事件总线\nVue.prototype.$bus = bus\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"_1-2-页面使用-发布事件-传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-页面使用-发布事件-传值"}},[s._v("#")]),s._v(" 1.2 页面使用 发布事件-传值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// this.$bus.$emit('事件名', 额外参数)\nthis.$bus.$emit('send', 'hello')\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"_1-3-订阅事件-接收组件值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-订阅事件-接收组件值"}},[s._v("#")]),s._v(" 1.3 订阅事件-接收组件值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 1.在created中订阅\n// 2.回调函数需要写成箭头函数\n// 3.this.$bus.$on('事件名', 事件回调函数)\nthis.$bus.$emit('send', msg => {\n    console.log(msg)\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"_2-注意点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-注意点"}},[s._v("#")]),s._v(" 2.注意点")]),s._v(" "),n("p",[n("strong",[s._v("$on先执行 再执行$emit触发事件（嵌套关系）")]),s._v("\n知道此问题必须先知道父子级组件嵌套关系的钩子函数执行顺序？如果你对生命周期钩子函数不了解，先来看看"),n("a",{attrs:{href:"https://blog.csdn.net/m0_46846526/article/details/117637680",target:"_blank",rel:"noopener noreferrer"}},[s._v("生命周期的详解"),n("OutboundLink")],1),s._v("。父子嵌套生命周期 会先执行父组件中的前三个后 执行子组件的前三个 再去执行父组件的mounted")]),s._v(" "),n("img",{attrs:{src:s.$withBase("/images/3.jpg"),alt:"mixureSecure"}}),s._v(" "),n("p",[s._v("接下来，我们做个实验，看看为什么先执行$on，再执行$emit")]),s._v(" "),n("p",[n("strong",[s._v("父组件中")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n    <div>\n        <son></son>\n    </div>\n</template>\n<script>\nimport son from './Son.vue'\nexport default {\n    components: {\n        son\n    },\n    created() {\n        console.log('父组件：我被创建啦')\n        this.$bus.$emit('bus', 10)\n    }\n}\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[n("strong",[s._v("子组件中")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n    <div>{{message}}</div>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            message: ''\n        }\n    },\n    created() {\n        console.log('子组件：我被创建了')\n        this.$bus.$on('bus', (val) => {\n            console.log(val);\n            this.message = val;\n        })\n    }\n}\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("img",{attrs:{src:s.$withBase("/images/4.jpg"),alt:"mixureSecure"}}),s._v(" "),n("p",[s._v("这时候是看不见任何接收信息的\n原因就是 没有等子组件$on去注册事件后就执行了父组件的$emit 所以接收不到信息")]),s._v(" "),n("p",[n("strong",[s._v("解决办法：把父组件中$emit事件放在mounted钩子函数中，等待子组件创建并注册$on事件后去触发$emit。只适合嵌套关系，可能出现兄弟关系，也要看情况进行使用")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("mounted() {\n    console.log('父组件：mounted');\n    this.$bus.$emit('bus', 10);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"_3-移除事件监听"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-移除事件监听"}},[s._v("#")]),s._v(" 3.移除事件监听")]),s._v(" "),n("p",[s._v("来看个例子")]),s._v(" "),n("p",[s._v("父组件中每两秒进行一次传递 点击v-if后将组件进行销毁或者重建")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n    <div>\n        <button @click=\"isShow != isShow\">{{isShow ? '销毁' : '重建'}}</button>\n        <son v-if='isShow=isShow'>son</son>\n    </div>\n</template>\n<script>\nimport son from'./Son.vue\nexport default {\n    components: {\n        son\n    },\n    data() {\n        return {\n            isShow: true\n        }\n    },\n    created() {\n        console.log('父组件：我被创建啦')\n        setInterval(() => {\n            this.$bus.$emit('bus', 10)\n        }, 2000)\n    }\n}\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n    <div>\n        {{message}}\n    </div>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            message: null\n        }\n    },\n    created() {\n        console.log('子组件：我被创建啦')\n        this.$bus.$on('bus', (val) => {\n            console.log(val)\n            this.message = val\n        })\n    }\n}\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("问题点：当点击销毁子组件的时候，子组件还能接收到数据吗？对应的回调函数还能再执行吗？答案是会，事件订阅功能是$eventBus对象完成的，与组件无关，当你点击销毁后，再点击创建又会多了一个订阅事件，依次类推每次点击新增后都会多一个订阅事件")]),s._v(" "),n("img",{attrs:{src:s.$withBase("/images/5.jpg"),alt:"mixureSecure"}}),s._v(" "),n("p",[s._v("造成原因：事件订阅是通过$eventBus对象完成的，与组件无关")]),s._v(" "),n("p",[n("strong",[s._v("如果不移除事件监听 并且会造成内存泄漏")])]),s._v(" "),n("p",[s._v("在son组件中修改")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("created() {\n    console.log('子组件：我被创建啦')\n    const m = 1 * 1024 * 1024;\n    const arr = new Array(m).fill('a');\n\n    this.$bus.$on('bus', function f1(val)) {\n        // 注意这里有一个闭包\n        console.log(val, 'son listen... bus', arr[1])\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("img",{attrs:{src:s.$withBase("/images/6.jpg"),alt:"mixureSecure"}}),s._v(" "),n("p",[n("strong",[s._v("通过v-if销毁和重新创建来看通过数据发现 销毁后并没有对空间进行释放")])]),s._v(" "),n("p",[n("strong",[s._v("解决方案：在子组件销毁后取消订阅事件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("destroyed() {\n    // 取消对bus事件的监听\n    this.$bus.$off('bus');\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("对bus取消事件监听后，内存得到了释放")]),s._v(" "),n("p",[s._v('<img :src="$withBase(\'/images/7.png\' alt="mixureSecure")" />')]),s._v(" "),n("p",[n("strong",[s._v("总结：")])]),s._v(" "),n("p",[n("strong",[s._v("1.任何组件都可以在事件总线中发布事件this.$bus.$emit('xxx', '传递参数')")])]),s._v(" "),n("p",[n("strong",[s._v("2.任何组件都可以在事件总线中监听事件this.$bus.$on('xxx', (接收参数) => {对形参进行操作})")])]),s._v(" "),n("p",[n("strong",[s._v("3.main.js注册空的Vue对象，只负责$on注册事件，$emit触发事件，一定要确保$on先执行")])]),s._v(" "),n("p",[n("strong",[s._v("4.$off的格式：")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("$off()会取消所有的事件订阅")])]),s._v(" "),n("li",[n("strong",[s._v("$off('事件名')会取消指定事件名的")])]),s._v(" "),n("li",[n("strong",[s._v("$off('事件名', 回调)会取消指定事件名的。指定回调")])])])])}),[],!1,null,null,null);n.default=t.exports}}]);