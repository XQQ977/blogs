(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{468:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"一、vuex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、vuex"}},[s._v("#")]),s._v(" 一、VUEX")]),s._v(" "),t("h2",{attrs:{id:"_1-state"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-state"}},[s._v("#")]),s._v(" 1.state")]),s._v(" "),t("h3",{attrs:{id:"_1-1-state提供唯一的公共数据源-所有共享的数据都要统一放到store的state中进行存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-state提供唯一的公共数据源-所有共享的数据都要统一放到store的state中进行存储"}},[s._v("#")]),s._v(" 1.1 state提供唯一的公共数据源，所有共享的数据都要统一放到Store的State中进行存储")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 创建store数据源，提供唯一公共数据\nconst store = new Vuex.store({\n    state: { count: 0 }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"_1-2-组件访问state中数据的第一种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-组件访问state中数据的第一种方式"}},[s._v("#")]),s._v(" 1.2 组件访问State中数据的"),t("strong",[s._v("第一种方式")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("this.$store.state.全局数据名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_1-3-组件访问state中数据的第二种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-组件访问state中数据的第二种方式"}},[s._v("#")]),s._v(" 1.3 组件访问State中数据的"),t("strong",[s._v("第二种方式")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 1.从vuex中按需导入mapState函数\nimport { mapState } from 'vuex'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("通过刚才导入的mapState函数，将当前组件需要的全局数据，映射为当前组件的computed计算属性：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 2.将全局数据，映射为当前组件的computed计算属性\ncomputed: {\n    ...mapState(['count'])\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_2-mutation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-mutation"}},[s._v("#")]),s._v(" 2.Mutation")]),s._v(" "),t("h3",{attrs:{id:"_2-1-mutation用于变更store中的数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-mutation用于变更store中的数据"}},[s._v("#")]),s._v(" 2.1 Mutation用于变更Store中的数据")]),s._v(" "),t("ul",[t("li",[s._v("只能通过Mutation变更Store数据，不可以直接操作Store中的数据。")]),s._v(" "),t("li",[s._v("通过这种方式虽然操作起来稍微繁琐一些，但是可以集中监控所有数据的变化")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 定义 Mutation\nconst store = new Vuex.Store({\n    state: {\n        count: 0\n    },\n    mutations: {\n        add(state) {\n            // 变更状态\n            state.count++\n        }\n    }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 触发mutation\nmethods: {\n    handle1() {\n        // 触发mutations的第一种方式\n        this.$store.commit('add')\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_2-2-可以在触发mutations时传递参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-可以在触发mutations时传递参数"}},[s._v("#")]),s._v(" 2.2 可以在触发mutations时传递参数：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 定义Mutations\nconst store = new Vuex.Store({\n    state: {\n        count: 0\n    },\n    mutations: {\n        addN(state, step) {\n            // 变更状态\n            state.count += step\n        }\n    }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 触发Mutations\nmethods: {\n    handle2() {\n        // 在调用commit函数\n        // 触发mutations时携带参数\n        this.$store.commit('addN', 3)\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"_2-3-this-store-commit-是触发mutations的第一种方式-触发mutations的第二种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-this-store-commit-是触发mutations的第一种方式-触发mutations的第二种方式"}},[s._v("#")]),s._v(" 2.3 this.$store.commit()是触发mutations的第一种方式，触发mutations的"),t("strong",[s._v("第二种方式")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 1.从vuex中按需导入mapMutations函数\nimport { mapMutations } from 'vuex'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("通过刚才导入的mapMutations函数，将需要的mutations函数，映射为当前组件的methods方法：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 2.将指定的mutations函数，映射为当前组件的methods方法\nmethods: {\n    ...mapMutations(['add', 'addN'])\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_3-action"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-action"}},[s._v("#")]),s._v(" 3.Action")]),s._v(" "),t("h3",{attrs:{id:"_3-1-action用于处理异步任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-action用于处理异步任务"}},[s._v("#")]),s._v(" 3.1 Action用于处理异步任务")]),s._v(" "),t("p",[s._v("如果通过异步操作变更数据，必须通过Action，而不能使用Mutations，但是在Action中还是要通过触发Mutations的方式间接变更数据。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 定义Action\nconst store = new Vuex.Store({\n    state: {\n        count: 0\n    },\n    mutations: {\n        add(state) {\n            state.count++;\n        }\n    },\n    actions: {\n        addAsync(context) {\n            setTimeout(() => {\n                  context.commit('add');\n            }, 1000)\n        }\n    }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 触发Action\nmethods: {\n    handle() {\n        // 触发actions的第一种方式\n        this.$store.dispatch('addAsync')\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_3-2-触发actions异步任务时携带参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-触发actions异步任务时携带参数"}},[s._v("#")]),s._v(" 3.2 触发actions异步任务时携带参数：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 定义Action\nconst store = new Vuex.Store({\n    state: {\n        count: 0\n    },\n    mutations: {\n        addN(state, step) {\n            state.count += step;\n        }\n    },\n    actions: {\n        addNAsync(context, step) {\n            setTimeout(() => {\n                context.commit('addN', step)\n            }, 1000)\n        }\n    }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 触发Action\nmethods: {\n    handle() {\n        // 在调用dispatch函数\n        // 触发actions时携带参数\n        this.$store.dispatch('addAsync', 5)\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"_3-3-this-store-dispatch-是触发actions的第一种方式-触发actions的第二种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-this-store-dispatch-是触发actions的第一种方式-触发actions的第二种方式"}},[s._v("#")]),s._v(" 3.3 this.$store.dispatch()是触发actions的第一种方式，触发actions的"),t("strong",[s._v("第二种方式")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 1.从vuex中按需导入mapActions函数\nimport { mapActions } from 'vuex'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("通过刚才导入的mapActions函数，将需要的actions函数，映射为当前组件的methods方法：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 2.将指定的actions函数，映射为当前组件的methods函数\n...mapActions(['addAsync', 'addNAsync'])\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_4-getter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-getter"}},[s._v("#")]),s._v(" 4.Getter")]),s._v(" "),t("h3",{attrs:{id:"_4-1-getter用于对store中的数据进行加工处理形成新的数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-getter用于对store中的数据进行加工处理形成新的数据"}},[s._v("#")]),s._v(" 4.1 Getter用于对Store中的数据进行加工处理形成新的数据")]),s._v(" "),t("ul",[t("li",[s._v("Getter可以对Store中已有的数据加工处理以后形成新的数据，类似Vue的计算属性")]),s._v(" "),t("li",[s._v("Store中数据发生变化，Getter的数据也会跟着变化")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 定义Getter\nconst store = new Vuex.Store({\n    state: {\n        count: 0\n    },\n    getters: {\n        showNum: state => {\n            return '当前最新的数是【' + state.count + '】'\n        }\n    }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"_4-2-使用getters的第一种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-使用getters的第一种方式"}},[s._v("#")]),s._v(" 4.2 使用getters的"),t("strong",[s._v("第一种方式")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("this.$store.getters.名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_4-3-使用getters的第二种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-使用getters的第二种方式"}},[s._v("#")]),s._v(" 4.3 使用getters的"),t("strong",[s._v("第二种方式")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import { mapGetters } from 'vuex'\n\ncomputed: {\n    ...mapGetters(['showNum'])\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);